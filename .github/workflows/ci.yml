name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11, 3.12]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov coverage

    - name: Run tests
      run: |
        python test_autoclicker.py

    - name: Run with pytest
      run: |
        pytest --tb=short --cov=autoclicker --cov-report=xml --cov-report=html

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

    - name: Check code quality
      run: |
        pip install flake8 black
        flake8 autoclicker.py --count --select=E9,F63,F7,F82 --show-source --statistics
        black --check autoclicker.py

  build:
    runs-on: windows-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: |
        pyinstaller --onefile --windowed \
                   --icon=autoclicker.ico \
                   --add-data "autoclicker.ico;." \
                   --name "WindowsAutoclicker" \
                   autoclicker.py

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: WindowsAutoclicker-${{ github.run_number }}
        path: dist/

  release:
    runs-on: windows-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: WindowsAutoclicker-${{ github.run_number }}
        path: dist/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0-${{ github.run_number }}
        release_name: Release v1.0.0-${{ github.run_number }}
        body: |
          ## Changes
          - Automated build from commit ${{ github.sha }}
          - All tests passed
          - Built on Windows with Python 3.11

          ## Downloads
          - Windows executable available in assets
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/WindowsAutoclicker.exe
        asset_name: WindowsAutoclicker.exe
        asset_content_type: application/octet-stream
